/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package netducation;

import com.lowagie.text.DocumentException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yoelt
 */
public class HomeWindow extends javax.swing.JFrame {

    public Users x = new Users();
    String namaLogin;
    int poinLogin;
    List<Course> lc = CourseDatabaseClass.selectQueryCourse();
    /**
     * Creates new form HomeWindow
     */
    public HomeWindow() {
        initComponents();
    }
    
    public void setData(Users u) {
        x = u;
    }
    
    public int iniRate=0; //1 untuk rate course, 2 untuk rate admin
    public int selectedColumnHeaderIndex;
    public int statusSort = 0;
    public int rateSort = 0;
    public int rateSelected = 0;
    public int star = 0;
    private Boolean asc1 = true;
    private Boolean asc2 = true;
    private String criteria = "";
    String head = "courseID";
    String order = "ASC";
    //String selectedComboBox = String.valueOf(this.courseProgrammingLanguageOption.getSelectedItem());
    
    public void setUserLogin() {
        namaLogin=x.getUsername();
        poinLogin=x.getPoint();
        
        if (x.getRole() == 1) {
            this.homeImgLabel.setText("<html>WELCOME ADMIN, <br><br>" + x.getUsername() + "</html>");
            this.homeAdminMenuBarDeleteCourse.setEnabled(true);
            this.homeAdminMenuBarAddCourse.setEnabled(true);
            this.homeAdminMenuBarEditCourse.setEnabled(true);
            this.homeAdminMenuBarAddTest.setEnabled(true);
            this.homeAdminMenuBarDeleteTest.setEnabled(true);
            this.homeMenuBarAmbilCourse.setEnabled(false);
            this.homeMenuBarRateCourse.setEnabled(false);
            this.homeMenuBarRateTeacher.setEnabled(false);
            this.homeMenuBarTest.setEnabled(false);
            this.deleteCourseButton.setEnabled(true);
            this.editCourseButton.setEnabled(true);
            this.tambahCourseButton.setEnabled(true);
            this.ambilCourseButton.setEnabled(false);
            this.homeTestButton.setEnabled(false);
            this.rateCourseButton.setEnabled(false);
            this.rateTeacherButton.setEnabled(false);
            this.jLabel2.setText("ADMIN REPORT");
        }
        else {
            this.homeImgLabel.setText("<html>WELCOME, " + x.getUsername() + "<br><br>Poin saat ini : " + x.getPoint() + "</html>");
            this.homeAdminMenuBarDeleteCourse.setEnabled(false);
            this.homeAdminMenuBarAddCourse.setEnabled(false);
            this.homeAdminMenuBarEditCourse.setEnabled(false);
            this.homeAdminMenuBarAddTest.setEnabled(false);
            this.homeAdminMenuBarDeleteTest.setEnabled(false);
            this.homeMenuBarAmbilCourse.setEnabled(true);
            this.homeMenuBarRateCourse.setEnabled(true);
            this.homeMenuBarRateTeacher.setEnabled(true);
            this.homeMenuBarTest.setEnabled(false);
            this.deleteCourseButton.setEnabled(false);
            this.editCourseButton.setEnabled(false);
            this.tambahCourseButton.setEnabled(false);
            this.ambilCourseButton.setEnabled(true);
            this.homeTestButton.setEnabled(true);
            this.rateCourseButton.setEnabled(true);
            this.rateTeacherButton.setEnabled(true);
            this.jLabel2.setText("USER REPORT");
        }
    }
    
    public void clearText() {
        editUsernameField.setText("");
        editEmailField.setText("");
        editPasswordField.setText("");
        editRetypePasswordField.setText("");
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HomeEditProfilWindow = new javax.swing.JFrame();
        editEmailLabel = new javax.swing.JLabel();
        editUsernameLabel = new javax.swing.JLabel();
        editPasswordLabel = new javax.swing.JLabel();
        editRetypePasswordLabel = new javax.swing.JLabel();
        editEmailField = new javax.swing.JTextField();
        editUsernameField = new javax.swing.JTextField();
        editButton = new javax.swing.JButton();
        editPasswordField = new javax.swing.JPasswordField();
        editRetypePasswordField = new javax.swing.JPasswordField();
        editProfilLabel = new javax.swing.JLabel();
        editClearButton = new javax.swing.JButton();
        editStatusLabel = new javax.swing.JLabel();
        TerminateAccount = new javax.swing.JFrame();
        terminateRetypePasswordField1 = new javax.swing.JPasswordField();
        terminateButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        terminatePasswordField1 = new javax.swing.JPasswordField();
        HomeLaporanWindow = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        laporanCourseTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        laporanNamaLabel = new javax.swing.JLabel();
        laporanPointLabel = new javax.swing.JLabel();
        laporanRankLabel = new javax.swing.JLabel();
        saveToPdfButton = new javax.swing.JButton();
        laporanInfoLabel = new javax.swing.JLabel();
        namaUser = new javax.swing.JLabel();
        pointUser = new javax.swing.JLabel();
        rankUser = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rateButtonGroup = new javax.swing.ButtonGroup();
        rateWindow = new javax.swing.JFrame();
        titleRateCourseWindow = new javax.swing.JLabel();
        rate1Course = new javax.swing.JRadioButton();
        rate2Course = new javax.swing.JRadioButton();
        rate3Course = new javax.swing.JRadioButton();
        rate4Course = new javax.swing.JRadioButton();
        rate5Course = new javax.swing.JRadioButton();
        labelIDCourse = new javax.swing.JLabel();
        labelNamaCourse = new javax.swing.JLabel();
        idCourseRate = new javax.swing.JLabel();
        namaCourseRate = new javax.swing.JLabel();
        rateButton = new javax.swing.JButton();
        doRateButtonGroup = new javax.swing.ButtonGroup();
        homeTerminateButton = new javax.swing.JButton();
        homeImgLabel = new javax.swing.JLabel();
        homeEditProfileButton = new javax.swing.JButton();
        homeTestButton = new javax.swing.JButton();
        homeLaporanButton = new javax.swing.JButton();
        homeLogoutButton = new javax.swing.JButton();
        tambahCourseButton = new javax.swing.JButton();
        editCourseButton = new javax.swing.JButton();
        deleteCourseButton = new javax.swing.JButton();
        ambilCourseButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        courseTable = new javax.swing.JTable();
        searchField = new javax.swing.JTextField();
        searchCourseButton = new javax.swing.JButton();
        course1StarRating = new javax.swing.JRadioButton();
        course2StarRating = new javax.swing.JRadioButton();
        course3StarRating = new javax.swing.JRadioButton();
        course4StarRating = new javax.swing.JRadioButton();
        course5StarRating = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        courseProgrammingLanguageOption = new javax.swing.JComboBox<>();
        poinDapatSlider = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        minPoinSlider = new javax.swing.JSlider();
        rateCourseButton = new javax.swing.JButton();
        rateTeacherButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        homeAccountMenu = new javax.swing.JMenu();
        homeMenuBarEditProfil = new javax.swing.JMenuItem();
        homeMenuBarLaporan = new javax.swing.JMenuItem();
        homeMenuBarTest = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        homeMenuBarLogout = new javax.swing.JMenuItem();
        homeMenuBarTerminate = new javax.swing.JMenuItem();
        homeCourseMenu = new javax.swing.JMenu();
        homeMenuBarAmbilCourse = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        homeMenuBarRateCourse = new javax.swing.JMenuItem();
        homeMenuBarRateTeacher = new javax.swing.JMenuItem();
        homeAdminMenu = new javax.swing.JMenu();
        homeAdminMenuBarAddCourse = new javax.swing.JMenuItem();
        homeAdminMenuBarEditCourse = new javax.swing.JMenuItem();
        homeAdminMenuBarDeleteCourse = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        homeAdminMenuBarAddTest = new javax.swing.JMenuItem();
        homeAdminMenuBarDeleteTest = new javax.swing.JMenuItem();

        HomeEditProfilWindow.setResizable(false);
        HomeEditProfilWindow.setSize(new java.awt.Dimension(650, 500));

        editEmailLabel.setText("Email:");

        editUsernameLabel.setText("Username:");

        editPasswordLabel.setText("Password:");

        editRetypePasswordLabel.setText("Retype Password:");

        editEmailField.setText(x.getEmail());

        editButton.setText("Edit my profile...");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        editProfilLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        editProfilLabel.setText("Edit Profil");

        editClearButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        editClearButton.setText("Clear");
        editClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editClearButtonActionPerformed(evt);
            }
        });

        editStatusLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        editStatusLabel.setText("...");

        javax.swing.GroupLayout HomeEditProfilWindowLayout = new javax.swing.GroupLayout(HomeEditProfilWindow.getContentPane());
        HomeEditProfilWindow.getContentPane().setLayout(HomeEditProfilWindowLayout);
        HomeEditProfilWindowLayout.setHorizontalGroup(
            HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeEditProfilWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(HomeEditProfilWindowLayout.createSequentialGroup()
                        .addGroup(HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editProfilLabel)
                            .addGroup(HomeEditProfilWindowLayout.createSequentialGroup()
                                .addGroup(HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(HomeEditProfilWindowLayout.createSequentialGroup()
                                        .addComponent(editClearButton)
                                        .addGap(53, 53, 53))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, HomeEditProfilWindowLayout.createSequentialGroup()
                                        .addComponent(editRetypePasswordLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(HomeEditProfilWindowLayout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(editRetypePasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(HomeEditProfilWindowLayout.createSequentialGroup()
                                .addGroup(HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(editEmailLabel)
                                    .addComponent(editPasswordLabel)
                                    .addComponent(editUsernameLabel))
                                .addGap(49, 49, 49)
                                .addGroup(HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(editUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(editEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(editPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(29, 101, Short.MAX_VALUE)))
                .addContainerGap(516, Short.MAX_VALUE))
        );
        HomeEditProfilWindowLayout.setVerticalGroup(
            HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeEditProfilWindowLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(editProfilLabel)
                .addGap(18, 18, 18)
                .addGroup(HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editEmailLabel)
                    .addComponent(editEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editUsernameLabel)
                    .addComponent(editUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editPasswordLabel)
                    .addComponent(editPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editRetypePasswordLabel)
                    .addComponent(editRetypePasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(HomeEditProfilWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editButton)
                    .addGroup(HomeEditProfilWindowLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(editClearButton)))
                .addGap(32, 32, 32)
                .addComponent(editStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TerminateAccount.setResizable(false);
        TerminateAccount.setSize(new java.awt.Dimension(400, 400));

        terminateButton1.setText("HAPUS AKUN :(");
        terminateButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminateButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Anda yakin ingin menghapus akun???");

        jLabel5.setText("Password:");

        jLabel6.setText("Retype Password:");

        javax.swing.GroupLayout TerminateAccountLayout = new javax.swing.GroupLayout(TerminateAccount.getContentPane());
        TerminateAccount.getContentPane().setLayout(TerminateAccountLayout);
        TerminateAccountLayout.setHorizontalGroup(
            TerminateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TerminateAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TerminateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addGroup(TerminateAccountLayout.createSequentialGroup()
                        .addGroup(TerminateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(38, 38, 38)
                        .addGroup(TerminateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(terminatePasswordField1)
                            .addComponent(terminateRetypePasswordField1)
                            .addComponent(terminateButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TerminateAccountLayout.setVerticalGroup(
            TerminateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TerminateAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(TerminateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(terminatePasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(TerminateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(terminateRetypePasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(terminateButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        HomeLaporanWindow.setResizable(false);
        HomeLaporanWindow.setSize(new java.awt.Dimension(606, 800));

        jScrollPane1.setViewportView(laporanCourseTable);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgPackage/Banner Login Window.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24));

        laporanNamaLabel.setText("NAME:  ");

        laporanPointLabel.setText("POINT: ");

        laporanRankLabel.setText("RANK:  ");

        saveToPdfButton.setText("SAVE AS PDF");
        saveToPdfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToPdfButtonActionPerformed(evt);
            }
        });

        laporanInfoLabel.setText("INFO");

        namaUser.setText("jLabel7");

        pointUser.setText("jLabel8");

        rankUser.setText("jLabel9");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("COURSE YANG SUDAH DIAMBIL");

        javax.swing.GroupLayout HomeLaporanWindowLayout = new javax.swing.GroupLayout(HomeLaporanWindow.getContentPane());
        HomeLaporanWindow.getContentPane().setLayout(HomeLaporanWindowLayout);
        HomeLaporanWindowLayout.setHorizontalGroup(
            HomeLaporanWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeLaporanWindowLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(217, 217, 217))
            .addGroup(HomeLaporanWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HomeLaporanWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeLaporanWindowLayout.createSequentialGroup()
                        .addComponent(laporanInfoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveToPdfButton))
                    .addGroup(HomeLaporanWindowLayout.createSequentialGroup()
                        .addGroup(HomeLaporanWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(HomeLaporanWindowLayout.createSequentialGroup()
                                .addComponent(laporanPointLabel)
                                .addGap(18, 18, 18)
                                .addComponent(pointUser))
                            .addGroup(HomeLaporanWindowLayout.createSequentialGroup()
                                .addComponent(laporanRankLabel)
                                .addGap(18, 18, 18)
                                .addComponent(rankUser))
                            .addGroup(HomeLaporanWindowLayout.createSequentialGroup()
                                .addComponent(laporanNamaLabel)
                                .addGap(18, 18, 18)
                                .addComponent(namaUser))
                            .addComponent(jLabel7))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        HomeLaporanWindowLayout.setVerticalGroup(
            HomeLaporanWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeLaporanWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(22, 22, 22)
                .addGroup(HomeLaporanWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(laporanNamaLabel)
                    .addComponent(namaUser))
                .addGap(18, 18, 18)
                .addGroup(HomeLaporanWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(laporanPointLabel)
                    .addComponent(pointUser))
                .addGap(18, 18, 18)
                .addGroup(HomeLaporanWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(laporanRankLabel)
                    .addComponent(rankUser))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addGroup(HomeLaporanWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveToPdfButton)
                    .addComponent(laporanInfoLabel))
                .addContainerGap())
        );

        rateButtonGroup.add(this.course1StarRating);
        rateButtonGroup.add(this.course2StarRating);
        rateButtonGroup.add(this.course3StarRating);
        rateButtonGroup.add(this.course4StarRating);
        rateButtonGroup.add(this.course5StarRating);

        rateWindow.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        rateWindow.setResizable(false);
        rateWindow.setSize(new java.awt.Dimension(303, 299));

        titleRateCourseWindow.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleRateCourseWindow.setText("Rate Course");

        rate1Course.setText("★");
        rate1Course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rate1CourseActionPerformed(evt);
            }
        });

        rate2Course.setText("★★");
        rate2Course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rate2CourseActionPerformed(evt);
            }
        });

        rate3Course.setText("★★★");
        rate3Course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rate3CourseActionPerformed(evt);
            }
        });

        rate4Course.setText("★★★★");
        rate4Course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rate4CourseActionPerformed(evt);
            }
        });

        rate5Course.setText("★★★★★");
        rate5Course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rate5CourseActionPerformed(evt);
            }
        });

        labelIDCourse.setText("ID Course: ");

        labelNamaCourse.setText("Nama Course: ");

        idCourseRate.setText("jLabel14");

        namaCourseRate.setText("jLabel15");

        rateButton.setText("RATE NOW");
        rateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rateWindowLayout = new javax.swing.GroupLayout(rateWindow.getContentPane());
        rateWindow.getContentPane().setLayout(rateWindowLayout);
        rateWindowLayout.setHorizontalGroup(
            rateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rateWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(rateWindowLayout.createSequentialGroup()
                        .addGroup(rateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rate5Course)
                            .addComponent(rate4Course)
                            .addComponent(rate2Course)
                            .addComponent(rate1Course)
                            .addComponent(rate3Course)
                            .addGroup(rateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(titleRateCourseWindow)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, rateWindowLayout.createSequentialGroup()
                                    .addGroup(rateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(labelIDCourse)
                                        .addComponent(labelNamaCourse))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(rateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(namaCourseRate)
                                        .addComponent(idCourseRate)))))
                        .addGap(0, 135, Short.MAX_VALUE)))
                .addContainerGap())
        );
        rateWindowLayout.setVerticalGroup(
            rateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rateWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleRateCourseWindow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelIDCourse)
                    .addComponent(idCourseRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNamaCourse)
                    .addComponent(namaCourseRate))
                .addGap(18, 18, 18)
                .addComponent(rate1Course)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rate2Course)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rate3Course)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rate4Course)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rate5Course)
                .addGap(18, 18, 18)
                .addComponent(rateButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        doRateButtonGroup.add(rate1Course);
        doRateButtonGroup.add(rate2Course);
        doRateButtonGroup.add(rate3Course);
        doRateButtonGroup.add(rate4Course);
        doRateButtonGroup.add(rate5Course);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        homeTerminateButton.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        homeTerminateButton.setForeground(new java.awt.Color(255, 0, 0));
        homeTerminateButton.setText("TERMINATE ACCOUNT");
        homeTerminateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeTerminateButtonActionPerformed(evt);
            }
        });

        homeImgLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        homeEditProfileButton.setText("Edit Profil");
        homeEditProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeEditProfileButtonActionPerformed(evt);
            }
        });

        homeTestButton.setText("Test");
        if (x.getRole() == 1) homeTestButton.setEnabled(false);
        else homeTestButton.setEnabled(true);

        homeLaporanButton.setText("Laporan");
        if (x.getRole() == 1) homeLaporanButton.setEnabled(false);
        else homeLaporanButton.setEnabled(true);
        homeLaporanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeLaporanButtonActionPerformed(evt);
            }
        });

        homeLogoutButton.setForeground(new java.awt.Color(255, 0, 0));
        homeLogoutButton.setText("Log Out");
        homeLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeLogoutButtonActionPerformed(evt);
            }
        });

        if (x.getRole() == 1) tambahCourseButton.setEnabled(true);
        else tambahCourseButton.setEnabled(false);
        tambahCourseButton.setText("TAMBAH COURSE");
        tambahCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahCourseButtonActionPerformed(evt);
            }
        });

        if (x.getRole() == 1) editCourseButton.setEnabled(true);
        else editCourseButton.setEnabled(false);
        editCourseButton.setText("EDIT");
        editCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCourseButtonActionPerformed(evt);
            }
        });

        if (x.getRole() == 1) deleteCourseButton.setEnabled(true);
        else deleteCourseButton.setEnabled(false);
        deleteCourseButton.setText("DELETE");
        deleteCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCourseButtonActionPerformed(evt);
            }
        });

        ambilCourseButton.setText("AMBIL COURSE");
        if (x.getRole() == 1) ambilCourseButton.setEnabled(false);
        ambilCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ambilCourseButtonActionPerformed(evt);
            }
        });

        courseTable.setModel(CourseLogicClass.showAllCourseData(x));
        courseTable.getTableHeader().addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                DefaultTableModel d = (DefaultTableModel)courseTable.getModel();
                selectedColumnHeaderIndex = courseTable.columnAtPoint(e.getPoint());
                if (asc1) {
                    order = "ASC";
                    asc1 = false;
                }
                else {
                    order = "DESC";
                    asc1 = true;
                }
                switch(selectedColumnHeaderIndex) {
                    case 0: head = "courseID"; break;
                    case 1: head = "language"; break;
                    case 2: head = "nama"; break;
                    case 3: head = "minimumPoin"; break;
                    case 4: head = "poinDapat"; break;
                    case 5: head = "teacher"; break;
                }
                d.fireTableDataChanged();
                switch(statusSort) {
                    case 1: courseTable.setModel(CourseLogicClass.sortTableCourse(x, criteria, head, order)); break;
                    case 2: courseTable.setModel(CourseLogicClass.sortTableCourseByRating(x, star, criteria, head, order)); break;
                    case 3:
                    case 4: courseTable.setModel(CourseLogicClass.sortTableCourse(x, head, order, poinDapatSlider.getValue()*100, minPoinSlider.getValue()*100)); break;
                    case 5: courseTable.setModel(CourseLogicClass.sortTableCourse(x, String.valueOf(courseProgrammingLanguageOption.getSelectedItem()), head, order)); break;
                }
            }
        });
        jScrollPane2.setViewportView(courseTable);

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        searchCourseButton.setText("SEARCH");
        searchCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCourseButtonActionPerformed(evt);
            }
        });

        course1StarRating.setText("*");
        course1StarRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course1StarRatingActionPerformed(evt);
            }
        });

        course2StarRating.setText("**");
        course2StarRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course2StarRatingActionPerformed(evt);
            }
        });

        course3StarRating.setText("***");
        course3StarRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course3StarRatingActionPerformed(evt);
            }
        });

        course4StarRating.setText("****");
        course4StarRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course4StarRatingActionPerformed(evt);
            }
        });

        course5StarRating.setText("*****");
        course5StarRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course5StarRatingActionPerformed(evt);
            }
        });

        jLabel3.setText("Filter By Rating:");

        jLabel8.setText("Filter By Point Earned:");

        jLabel9.setText("Filter By Minimum Point:");

        courseProgrammingLanguageOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C Language", "C++", "Phyton", "Swift 3", "Kotlin", "Java" }));
        courseProgrammingLanguageOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseProgrammingLanguageOptionActionPerformed(evt);
            }
        });

        poinDapatSlider.setMaximum(5);
        poinDapatSlider.setMinorTickSpacing(1);
        poinDapatSlider.setValue(0);
        poinDapatSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                poinDapatSliderStateChanged(evt);
            }
        });

        jLabel10.setText("Filter By Programming Language:");

        minPoinSlider.setMaximum(5);
        minPoinSlider.setMinorTickSpacing(1);
        minPoinSlider.setValue(0);
        minPoinSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minPoinSliderStateChanged(evt);
            }
        });

        rateCourseButton.setText("RATE COURSE");
        rateCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rateCourseButtonActionPerformed(evt);
            }
        });

        rateTeacherButton.setText("RATE TEACHER");
        rateTeacherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rateTeacherButtonActionPerformed(evt);
            }
        });

        homeAccountMenu.setText("Account");

        homeMenuBarEditProfil.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, 0));
        homeMenuBarEditProfil.setText("Edit Profile");
        homeMenuBarEditProfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuBarEditProfilActionPerformed(evt);
            }
        });
        homeAccountMenu.add(homeMenuBarEditProfil);

        homeMenuBarLaporan.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, 0));
        homeMenuBarLaporan.setText("Laporan");
        homeMenuBarLaporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuBarLaporanActionPerformed(evt);
            }
        });
        homeAccountMenu.add(homeMenuBarLaporan);

        homeMenuBarTest.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, 0));
        homeMenuBarTest.setText("Test");
        homeMenuBarTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuBarTestActionPerformed(evt);
            }
        });
        homeAccountMenu.add(homeMenuBarTest);
        homeAccountMenu.add(jSeparator1);

        homeMenuBarLogout.setText("Logout");
        homeMenuBarLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuBarLogoutActionPerformed(evt);
            }
        });
        homeAccountMenu.add(homeMenuBarLogout);

        homeMenuBarTerminate.setText("Tutup Akun");
        homeMenuBarTerminate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuBarTerminateActionPerformed(evt);
            }
        });
        homeAccountMenu.add(homeMenuBarTerminate);

        jMenuBar1.add(homeAccountMenu);

        homeCourseMenu.setText("Course");

        homeMenuBarAmbilCourse.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, 0));
        homeMenuBarAmbilCourse.setText("Ambil Course");
        homeMenuBarAmbilCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuBarAmbilCourseActionPerformed(evt);
            }
        });
        homeCourseMenu.add(homeMenuBarAmbilCourse);
        homeCourseMenu.add(jSeparator2);

        homeMenuBarRateCourse.setText("Rate Course");
        homeMenuBarRateCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuBarRateCourseActionPerformed(evt);
            }
        });
        homeCourseMenu.add(homeMenuBarRateCourse);

        homeMenuBarRateTeacher.setText("Rate Teacher");
        homeMenuBarRateTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuBarRateTeacherActionPerformed(evt);
            }
        });
        homeCourseMenu.add(homeMenuBarRateTeacher);

        jMenuBar1.add(homeCourseMenu);

        homeAdminMenu.setText("Admin Menu");

        homeAdminMenuBarAddCourse.setText("Add Course");
        homeAdminMenuBarAddCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeAdminMenuBarAddCourseActionPerformed(evt);
            }
        });
        homeAdminMenu.add(homeAdminMenuBarAddCourse);

        homeAdminMenuBarEditCourse.setText("Edit Course");
        homeAdminMenuBarEditCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeAdminMenuBarEditCourseActionPerformed(evt);
            }
        });
        homeAdminMenu.add(homeAdminMenuBarEditCourse);

        homeAdminMenuBarDeleteCourse.setText("Delete Course");
        homeAdminMenuBarDeleteCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeAdminMenuBarDeleteCourseActionPerformed(evt);
            }
        });
        homeAdminMenu.add(homeAdminMenuBarDeleteCourse);
        homeAdminMenu.add(jSeparator3);

        homeAdminMenuBarAddTest.setText("Add Test");
        homeAdminMenuBarAddTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeAdminMenuBarAddTestActionPerformed(evt);
            }
        });
        homeAdminMenu.add(homeAdminMenuBarAddTest);

        homeAdminMenuBarDeleteTest.setText("Delete Test");
        homeAdminMenuBarDeleteTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeAdminMenuBarDeleteTestActionPerformed(evt);
            }
        });
        homeAdminMenu.add(homeAdminMenuBarDeleteTest);

        jMenuBar1.add(homeAdminMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(course1StarRating)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(course2StarRating)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(course3StarRating)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(course4StarRating)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(course5StarRating)
                        .addGap(17, 17, 17))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tambahCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ambilCourseButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(homeTerminateButton)
                                .addGap(8, 8, 8))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(deleteCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rateCourseButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rateTeacherButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(homeImgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(homeEditProfileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(homeTestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(homeLaporanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(homeLogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(searchCourseButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(courseProgrammingLanguageOption, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(20, 20, 20)
                                .addComponent(poinDapatSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minPoinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(homeEditProfileButton)
                            .addComponent(homeTestButton))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(homeLaporanButton)
                            .addComponent(homeLogoutButton)))
                    .addComponent(homeImgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchCourseButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(course1StarRating)
                    .addComponent(course2StarRating)
                    .addComponent(course3StarRating)
                    .addComponent(course4StarRating)
                    .addComponent(course5StarRating))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(poinDapatSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(minPoinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseProgrammingLanguageOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteCourseButton)
                    .addComponent(editCourseButton)
                    .addComponent(rateCourseButton)
                    .addComponent(rateTeacherButton))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homeTerminateButton)
                    .addComponent(tambahCourseButton)
                    .addComponent(ambilCourseButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        int res;
        String user = editUsernameField.getText();
        String pass = String.valueOf(editPasswordField.getPassword());
        String rePass = String.valueOf(editRetypePasswordField.getPassword());
        String email = editEmailField.getText();
        if (user.equals(x.getUsername()) && email.equals(x.getEmail())) {
            res = LoginLogicClass.editDataValidationPassword(user, pass, rePass);
        }
        else if (user.equals(x.getUsername())) {
            res = LoginLogicClass.editDataValidationEmail(user, pass, rePass, email);
        }
        else if (email.equals(x.getEmail())) {
            res = LoginLogicClass.editDataValidationUsername(user, pass, rePass, email);
        }
        else {
            res = LoginLogicClass.editDataValidationAll(user, pass, rePass, email);
        }
        switch (res) {
            case 0: editStatusLabel.setText("DATA BERHASIL DI UPDATE"); clearText(); this.HomeEditProfilWindow.setVisible(false); this.HomeEditProfilWindow.setDefaultCloseOperation(DISPOSE_ON_CLOSE); break;
            case 1: editStatusLabel.setText("EMAIL YANG ANDA MASUKKAN TIDAK VALID, SILAHKAN COBA LAGI"); break;
            case 2: editStatusLabel.setText("PASSWORD YANG ANDA MASUKKAN TIDAK COCOK, SILAHKAN COBA LAGI"); break;
            case 3: editStatusLabel.setText("USERNAME SUDAH DIGUNAKAN, MASUKKAN USERNAME LAIN"); break;
            case 4: editStatusLabel.setText("EMAIL SUDAH TERDAFTAR, SILAHKAN COBA LAGI"); break;
            default: editStatusLabel.setText("SILAHKAN COBA LAGI"); break;
        }
        
    }//GEN-LAST:event_editButtonActionPerformed

    private void homeEditProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeEditProfileButtonActionPerformed
        this.HomeEditProfilWindow.setVisible(true);
        this.HomeEditProfilWindow.setAlwaysOnTop(true);
        this.editEmailField.setText(x.getEmail());
        this.editUsernameField.setText(x.getUsername());
    }//GEN-LAST:event_homeEditProfileButtonActionPerformed

    private void homeLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeLogoutButtonActionPerformed
        RegisterLoginWindow f1 = new RegisterLoginWindow();
        this.setVisible(false);
        f1.setVisible(true);
        f1.setDefaultCloseOperation(EXIT_ON_CLOSE);
    }//GEN-LAST:event_homeLogoutButtonActionPerformed

    private void editClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editClearButtonActionPerformed
        clearText();
    }//GEN-LAST:event_editClearButtonActionPerformed

    private void homeTerminateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeTerminateButtonActionPerformed
        HomeWindow h = new HomeWindow();
        this.TerminateAccount.setVisible(true);
        this.TerminateAccount.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_homeTerminateButtonActionPerformed
   
    private void terminateButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminateButton1ActionPerformed
        RegisterLoginWindow f1 = new RegisterLoginWindow();
        String pass = String.valueOf(terminatePasswordField1.getPassword());
        String rePass = String.valueOf(terminateRetypePasswordField1.getPassword());
        if (pass.equals(rePass)) {
            String decryptedPass = LoginLogicClass.decrypting(x.getPassword(), LoginLogicClass.seed);
            if (decryptedPass.equals(String.valueOf(terminatePasswordField1.getPassword()))) {
                DatabaseClass.deleteQuery(x.getUsername());
                if (x.getRole()==1) RelationalLogicClass.deleteAdmin(x.getUsername());
                else if (x.getRole()==2) RelationalLogicClass.deleteUser(x.getUsername());
                this.TerminateAccount.setVisible(false);
                JOptionPane.showMessageDialog(rootPane, "YOUR ACCOUNT HAS BEEN TERMINATED", "Termination Complete", JOptionPane.OK_OPTION);
                this.setVisible(false);
                f1.setVisible(true);
                f1.setDefaultCloseOperation(EXIT_ON_CLOSE);
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "PASSWORD INVALID, SILAHKAN COBA LAGI", "Password Invalid", JOptionPane.ERROR_MESSAGE);
                terminatePasswordField1.setText("");
                terminateRetypePasswordField1.setText("");
            }
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "PASSWORD TIDAK COCOK, SILAHKAN COBA LAGI", "Password Not Match", JOptionPane.ERROR_MESSAGE);
            terminatePasswordField1.setText("");
            terminateRetypePasswordField1.setText("");
        }
    }//GEN-LAST:event_terminateButton1ActionPerformed

    private void deleteCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCourseButtonActionPerformed
        String id = (String) this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 0);
        int x = JOptionPane.showConfirmDialog(rootPane, "Yakin ingin menghapus course??", "Delete Course", JOptionPane.YES_NO_OPTION);
        if (x == JOptionPane.YES_OPTION) {
            RelationalLogicClass.deleteCourse(id);
            CourseLogicClass.deleteCourse(id);
        }
        else {
            
        }
    }//GEN-LAST:event_deleteCourseButtonActionPerformed

    private void tambahCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahCourseButtonActionPerformed
        TambahCourseWindow tc = new TambahCourseWindow();
        tc.x = x;
        tc.setVisible(true);
        tc.setCourseLabel("Data Course Baru");
    }//GEN-LAST:event_tambahCourseButtonActionPerformed

    private void editCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCourseButtonActionPerformed
        TambahCourseWindow tc = new TambahCourseWindow();
        String cID = (String) getCourseTable().getModel().getValueAt(this.getCourseTable().getSelectedRow(), 0);
        Course toEdit = CourseDatabaseClass.selectQueryCourseSingular((String) getCourseTable().getModel().getValueAt(this.getCourseTable().getSelectedRow(), 0));
        if (toEdit.getTeacher().equals(x.getUsername())) {
            tc.courseID = (String) getCourseTable().getModel().getValueAt(this.getCourseTable().getSelectedRow(), 0);
            tc.setVisible(true);
            tc.setCourseLabel("Edit Data Course");
            tc.setAlwaysOnTop(true);
            System.out.println(tc.courseID);
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Bukan Course Anda", "Edit Failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editCourseButtonActionPerformed

    private void searchCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCourseButtonActionPerformed
        criteria = searchField.getText();
//        if (searchField.getText().isEmpty() || searchField.getText().equals("")) {
//            this.courseTable.setModel(CourseLogicClass.showAllCourseData(x));
//        }
//        else {
//            this.courseTable.setModel(CourseLogicClass.searchCourse(x, criteria));
//        }
        this.courseTable.setModel(CourseLogicClass.searchCourse(x, criteria));
        statusSort = 1;
    }//GEN-LAST:event_searchCourseButtonActionPerformed

    private void homeLaporanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeLaporanButtonActionPerformed
        this.HomeLaporanWindow.setVisible(true);
        String poin = String.valueOf(x.getPoint());
        this.namaUser.setText(x.getUsername());
        this.pointUser.setText(poin);
        if (x.getRole() == 1) {
            this.jLabel7.setText("COURSE YANG DIPUBLISH");
            this.pointUser.setText(RelationalDatabaseClass.adminAverageRating(x.getUsername()));
            this.rankUser.setText("Administrator");
            this.laporanCourseTable.setModel(RelationalLogicClass.showCourseByAdmin(x));
        }
        else {
            this.laporanCourseTable.setModel(RelationalLogicClass.showCourseTakenByUsername(x));
            if (x.getPoint() >= 0 && x.getPoint() <= 500) this.rankUser.setText("Beginner");
            else if (x.getPoint() > 501 && x.getPoint() <= 1000) this.rankUser.setText("Elite");
            else if (x.getPoint() > 1001 && x.getPoint() <= 1500) this.rankUser.setText("Professional");
            else if (x.getPoint() > 1501 && x.getPoint() <= 2000) this.rankUser.setText("Master");
            else if (x.getPoint() > 2001 && x.getPoint() <= 3000) this.rankUser.setText("Expert");
            else if (x.getPoint() > 3001) this.rankUser.setText("AI");
        }
        
        
    }//GEN-LAST:event_homeLaporanButtonActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        String criteria2 = searchField.getText();
        if (searchField.getText().isEmpty() || searchField.getText().equals("")) {
            this.courseTable.setModel(CourseLogicClass.showAllCourseData(x));
        }
        else {
            this.courseTable.setModel(CourseLogicClass.searchCourse(x, criteria));
        }
        statusSort = 1;
    }//GEN-LAST:event_searchFieldActionPerformed

    private void ambilCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ambilCourseButtonActionPerformed
        Course c = CourseDatabaseClass.selectQueryCourseSingular((String) courseTable.getModel().getValueAt(courseTable.getSelectedRow(), 0));
        System.out.println(c.getId() + " " + c.getNama() + " " + c.getPoinMinimum() + " " + c.getPoinDapat() + " " + c);
        RelationalLogicClass.takeCourse(x, c);
    }//GEN-LAST:event_ambilCourseButtonActionPerformed

    private void course1StarRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course1StarRatingActionPerformed
        star = 1;
        this.courseTable.setModel(CourseLogicClass.sortTableCourseByRating(x, star, criteria, head, order));
        statusSort = 2;
    }//GEN-LAST:event_course1StarRatingActionPerformed

    private void course2StarRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course2StarRatingActionPerformed
        star = 2;
        this.courseTable.setModel(CourseLogicClass.sortTableCourseByRating(x, star, criteria, head, order));
        statusSort = 2;
    }//GEN-LAST:event_course2StarRatingActionPerformed

    private void course3StarRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course3StarRatingActionPerformed
        star = 3;
        this.courseTable.setModel(CourseLogicClass.sortTableCourseByRating(x, star, criteria, head, order));
        statusSort = 2;
    }//GEN-LAST:event_course3StarRatingActionPerformed

    private void course4StarRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course4StarRatingActionPerformed
        star = 4;
        this.courseTable.setModel(CourseLogicClass.sortTableCourseByRating(x, star, criteria, head, order));
        statusSort = 2;
    }//GEN-LAST:event_course4StarRatingActionPerformed

    private void course5StarRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course5StarRatingActionPerformed
        star = 5;
        this.courseTable.setModel(CourseLogicClass.sortTableCourseByRating(x, star, criteria, head, order));
        statusSort = 2;
    }//GEN-LAST:event_course5StarRatingActionPerformed

    private void minPoinSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minPoinSliderStateChanged
        this.minPoinSlider.setValue(this.minPoinSlider.getValue());
        this.courseTable.setModel(CourseLogicClass.sortTableCourse(x, head, order, this.poinDapatSlider.getValue()*100, this.minPoinSlider.getValue()*100));
        statusSort = 3;
    }//GEN-LAST:event_minPoinSliderStateChanged

    private void poinDapatSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_poinDapatSliderStateChanged
        this.poinDapatSlider.setValue(this.poinDapatSlider.getValue());
        this.courseTable.setModel(CourseLogicClass.sortTableCourse(x, head, order, this.poinDapatSlider.getValue()*100, this.minPoinSlider.getValue()*100));
        statusSort = 4;
    }//GEN-LAST:event_poinDapatSliderStateChanged

    private void courseProgrammingLanguageOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseProgrammingLanguageOptionActionPerformed
        this.courseTable.setModel(CourseLogicClass.sortTableCourse(x, String.valueOf(this.courseProgrammingLanguageOption.getSelectedItem()), head, order));
        System.out.println(this.courseProgrammingLanguageOption.getSelectedItem());
        statusSort = 5;
    }//GEN-LAST:event_courseProgrammingLanguageOptionActionPerformed

    private void rate1CourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rate1CourseActionPerformed
        rateSelected=1;
    }//GEN-LAST:event_rate1CourseActionPerformed

    private void rate2CourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rate2CourseActionPerformed
        rateSelected=2;
    }//GEN-LAST:event_rate2CourseActionPerformed

    private void rate3CourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rate3CourseActionPerformed
        rateSelected=3;
    }//GEN-LAST:event_rate3CourseActionPerformed

    private void rate4CourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rate4CourseActionPerformed
        rateSelected=4;
    }//GEN-LAST:event_rate4CourseActionPerformed

    private void rate5CourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rate5CourseActionPerformed
        rateSelected=5;
    }//GEN-LAST:event_rate5CourseActionPerformed

    private void rateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rateButtonActionPerformed
        Users t = DatabaseClass.selectQueryUsersSingular((String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 5));
        if (iniRate==1) {
            RelationalLogicClass.rateCourse((String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 0), x.getUsername(), rateSelected);
        }
        else {
            RelationalLogicClass.rateAdmin(t.getUsername(), x.getUsername(), (String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 0), rateSelected);
        }
    }//GEN-LAST:event_rateButtonActionPerformed

    private void rateCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rateCourseButtonActionPerformed
        if (RelationalLogicClass.checkRatingCourseValidation(x.getUsername(), (String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 0))==false) {
            JOptionPane.showMessageDialog(rootPane, "Cannot rate (course not taken / double rate)", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else {
            this.rateWindow.setVisible(true);
            this.labelIDCourse.setText("Nama Course: ");
            this.labelNamaCourse.setText("ID Course: ");
            this.idCourseRate.setText((String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 0));
            this.namaCourseRate.setText((String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 1));
            rateSelected=0; iniRate=1;
        }
        
    }//GEN-LAST:event_rateCourseButtonActionPerformed

    private void rateTeacherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rateTeacherButtonActionPerformed
        if (RelationalLogicClass.checkRatingAdminValidation(x.getUsername(),(String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 5), (String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 0))==false) {
            JOptionPane.showMessageDialog(rootPane, "Cannot rate (course not taken / double rate)", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else {
            this.rateWindow.setVisible(true);
            this.labelIDCourse.setText("Nama Admin: ");
            this.labelNamaCourse.setText("Average Rating: ");
            this.idCourseRate.setText((String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 5));
            this.namaCourseRate.setText(RelationalDatabaseClass.adminAverageRating((String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 5)));
            rateSelected=0; iniRate=2;
        }
        
    }//GEN-LAST:event_rateTeacherButtonActionPerformed

    private void saveToPdfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToPdfButtonActionPerformed
        PDFFileClass.PrintFrameToPDF(HomeLaporanWindow, x.getUsername());
        JOptionPane.showMessageDialog(rootPane, "PDF Saved", "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_saveToPdfButtonActionPerformed

    private void homeMenuBarEditProfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuBarEditProfilActionPerformed
        this.HomeEditProfilWindow.setVisible(true);
        this.HomeEditProfilWindow.setAlwaysOnTop(true);
        this.editEmailField.setText(x.getEmail());
        this.editUsernameField.setText(x.getUsername());
    }//GEN-LAST:event_homeMenuBarEditProfilActionPerformed

    private void homeMenuBarTerminateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuBarTerminateActionPerformed
        RegisterLoginWindow f1 = new RegisterLoginWindow();
        String pass = String.valueOf(terminatePasswordField1.getPassword());
        String rePass = String.valueOf(terminateRetypePasswordField1.getPassword());
        if (pass.equals(rePass)) {
            String decryptedPass = LoginLogicClass.decrypting(x.getPassword(), LoginLogicClass.seed);
            if (decryptedPass.equals(String.valueOf(terminatePasswordField1.getPassword()))) {
                DatabaseClass.deleteQuery(x.getUsername());
                if (x.getRole()==1) RelationalLogicClass.deleteAdmin(x.getUsername());
                else if (x.getRole()==2) RelationalLogicClass.deleteUser(x.getUsername());
                this.TerminateAccount.setVisible(false);
                JOptionPane.showMessageDialog(rootPane, "YOUR ACCOUNT HAS BEEN TERMINATED", "Termination Complete", JOptionPane.OK_OPTION);
                this.setVisible(false);
                f1.setVisible(true);
                f1.setDefaultCloseOperation(EXIT_ON_CLOSE);
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "PASSWORD INVALID, SILAHKAN COBA LAGI", "Password Invalid", JOptionPane.ERROR_MESSAGE);
                terminatePasswordField1.setText("");
                terminateRetypePasswordField1.setText("");
            }
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "PASSWORD TIDAK COCOK, SILAHKAN COBA LAGI", "Password Not Match", JOptionPane.ERROR_MESSAGE);
            terminatePasswordField1.setText("");
            terminateRetypePasswordField1.setText("");
        }
    }//GEN-LAST:event_homeMenuBarTerminateActionPerformed

    private void homeMenuBarLaporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuBarLaporanActionPerformed
        this.HomeLaporanWindow.setVisible(true);
        String poin = String.valueOf(x.getPoint());
        this.namaUser.setText(x.getUsername());
        this.pointUser.setText(poin);
        if (x.getRole() == 1) {
            this.jLabel7.setText("COURSE YANG DIPUBLISH");
            this.pointUser.setText(RelationalDatabaseClass.adminAverageRating(x.getUsername()));
            this.rankUser.setText("Administrator");
            this.laporanCourseTable.setModel(RelationalLogicClass.showCourseByAdmin(x));
        }
        else {
            this.laporanCourseTable.setModel(RelationalLogicClass.showCourseTakenByUsername(x));
            if (x.getPoint() >= 0 && x.getPoint() <= 500) this.rankUser.setText("Beginner");
            else if (x.getPoint() > 501 && x.getPoint() <= 1000) this.rankUser.setText("Elite");
            else if (x.getPoint() > 1001 && x.getPoint() <= 1500) this.rankUser.setText("Professional");
            else if (x.getPoint() > 1501 && x.getPoint() <= 2000) this.rankUser.setText("Master");
            else if (x.getPoint() > 2001 && x.getPoint() <= 3000) this.rankUser.setText("Expert");
            else if (x.getPoint() > 3001) this.rankUser.setText("AI");
        }
    }//GEN-LAST:event_homeMenuBarLaporanActionPerformed

    private void homeMenuBarTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuBarTestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_homeMenuBarTestActionPerformed

    private void homeMenuBarLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuBarLogoutActionPerformed
        RegisterLoginWindow f1 = new RegisterLoginWindow();
        this.setVisible(false);
        f1.setVisible(true);
        f1.setDefaultCloseOperation(EXIT_ON_CLOSE);
    }//GEN-LAST:event_homeMenuBarLogoutActionPerformed

    private void homeMenuBarAmbilCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuBarAmbilCourseActionPerformed
        Course c = CourseDatabaseClass.selectQueryCourseSingular((String) courseTable.getModel().getValueAt(courseTable.getSelectedRow(), 0));
        System.out.println(c.getId() + " " + c.getNama() + " " + c.getPoinMinimum() + " " + c.getPoinDapat() + " " + c);
        RelationalLogicClass.takeCourse(x, c);
    }//GEN-LAST:event_homeMenuBarAmbilCourseActionPerformed

    private void homeMenuBarRateCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuBarRateCourseActionPerformed
        if (RelationalLogicClass.checkRatingCourseValidation(x.getUsername(), (String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 0))==false) {
            JOptionPane.showMessageDialog(rootPane, "Cannot rate (course not taken / double rate)", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else {
            this.rateWindow.setVisible(true);
            this.labelIDCourse.setText("Nama Course: ");
            this.labelNamaCourse.setText("ID Course: ");
            this.idCourseRate.setText((String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 0));
            this.namaCourseRate.setText((String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 1));
            rateSelected=0; iniRate=1;
        }
    }//GEN-LAST:event_homeMenuBarRateCourseActionPerformed

    private void homeMenuBarRateTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuBarRateTeacherActionPerformed
        if (RelationalLogicClass.checkRatingAdminValidation(x.getUsername(),(String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 5), (String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 0))==false) {
            JOptionPane.showMessageDialog(rootPane, "Cannot rate (course not taken / double rate)", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else {
            this.rateWindow.setVisible(true);
            this.labelIDCourse.setText("Nama Admin: ");
            this.labelNamaCourse.setText("Average Rating: ");
            this.idCourseRate.setText((String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 5));
            this.namaCourseRate.setText(RelationalDatabaseClass.adminAverageRating((String)this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 5)));
            rateSelected=0; iniRate=2;
        }
    }//GEN-LAST:event_homeMenuBarRateTeacherActionPerformed

    private void homeAdminMenuBarAddCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeAdminMenuBarAddCourseActionPerformed
        TambahCourseWindow tc = new TambahCourseWindow();
        tc.x = x;
        tc.setVisible(true);
        tc.setCourseLabel("Data Course Baru");
    }//GEN-LAST:event_homeAdminMenuBarAddCourseActionPerformed

    private void homeAdminMenuBarEditCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeAdminMenuBarEditCourseActionPerformed
        TambahCourseWindow tc = new TambahCourseWindow();
        String cID = (String) getCourseTable().getModel().getValueAt(this.getCourseTable().getSelectedRow(), 0);
        Course toEdit = CourseDatabaseClass.selectQueryCourseSingular((String) getCourseTable().getModel().getValueAt(this.getCourseTable().getSelectedRow(), 0));
        if (toEdit.getTeacher().equals(x.getUsername())) {
            tc.courseID = (String) getCourseTable().getModel().getValueAt(this.getCourseTable().getSelectedRow(), 0);
            tc.setVisible(true);
            tc.setCourseLabel("Edit Data Course");
            tc.setAlwaysOnTop(true);
            System.out.println(tc.courseID);
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Bukan Course Anda", "Edit Failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_homeAdminMenuBarEditCourseActionPerformed

    private void homeAdminMenuBarDeleteCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeAdminMenuBarDeleteCourseActionPerformed
        String id = (String) this.courseTable.getModel().getValueAt(this.courseTable.getSelectedRow(), 0);
        int x = JOptionPane.showConfirmDialog(rootPane, "Yakin ingin menghapus course??", "Delete Course", JOptionPane.YES_NO_OPTION);
        if (x == JOptionPane.YES_OPTION) {
            RelationalLogicClass.deleteCourse(id);
            CourseLogicClass.deleteCourse(id);
        }
        else {
            
        }
    }//GEN-LAST:event_homeAdminMenuBarDeleteCourseActionPerformed

    private void homeAdminMenuBarAddTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeAdminMenuBarAddTestActionPerformed
        
    }//GEN-LAST:event_homeAdminMenuBarAddTestActionPerformed

    private void homeAdminMenuBarDeleteTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeAdminMenuBarDeleteTestActionPerformed
        
    }//GEN-LAST:event_homeAdminMenuBarDeleteTestActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HomeWindow hw = new HomeWindow();
                hw.setVisible(true);
                hw.setUserLogin();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame HomeEditProfilWindow;
    private javax.swing.JFrame HomeLaporanWindow;
    private javax.swing.JFrame TerminateAccount;
    private javax.swing.JButton ambilCourseButton;
    private javax.swing.JRadioButton course1StarRating;
    private javax.swing.JRadioButton course2StarRating;
    private javax.swing.JRadioButton course3StarRating;
    private javax.swing.JRadioButton course4StarRating;
    private javax.swing.JRadioButton course5StarRating;
    private javax.swing.JComboBox<String> courseProgrammingLanguageOption;
    private javax.swing.JTable courseTable;
    private javax.swing.JButton deleteCourseButton;
    private javax.swing.ButtonGroup doRateButtonGroup;
    private javax.swing.JButton editButton;
    private javax.swing.JButton editClearButton;
    private javax.swing.JButton editCourseButton;
    private javax.swing.JTextField editEmailField;
    private javax.swing.JLabel editEmailLabel;
    private javax.swing.JPasswordField editPasswordField;
    private javax.swing.JLabel editPasswordLabel;
    private javax.swing.JLabel editProfilLabel;
    private javax.swing.JPasswordField editRetypePasswordField;
    private javax.swing.JLabel editRetypePasswordLabel;
    private javax.swing.JLabel editStatusLabel;
    private javax.swing.JTextField editUsernameField;
    private javax.swing.JLabel editUsernameLabel;
    private javax.swing.JMenu homeAccountMenu;
    private javax.swing.JMenu homeAdminMenu;
    private javax.swing.JMenuItem homeAdminMenuBarAddCourse;
    private javax.swing.JMenuItem homeAdminMenuBarAddTest;
    private javax.swing.JMenuItem homeAdminMenuBarDeleteCourse;
    private javax.swing.JMenuItem homeAdminMenuBarDeleteTest;
    private javax.swing.JMenuItem homeAdminMenuBarEditCourse;
    private javax.swing.JMenu homeCourseMenu;
    private javax.swing.JButton homeEditProfileButton;
    private javax.swing.JLabel homeImgLabel;
    private javax.swing.JButton homeLaporanButton;
    private javax.swing.JButton homeLogoutButton;
    private javax.swing.JMenuItem homeMenuBarAmbilCourse;
    private javax.swing.JMenuItem homeMenuBarEditProfil;
    private javax.swing.JMenuItem homeMenuBarLaporan;
    private javax.swing.JMenuItem homeMenuBarLogout;
    private javax.swing.JMenuItem homeMenuBarRateCourse;
    private javax.swing.JMenuItem homeMenuBarRateTeacher;
    private javax.swing.JMenuItem homeMenuBarTerminate;
    private javax.swing.JMenuItem homeMenuBarTest;
    private javax.swing.JButton homeTerminateButton;
    private javax.swing.JButton homeTestButton;
    private javax.swing.JLabel idCourseRate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JLabel labelIDCourse;
    private javax.swing.JLabel labelNamaCourse;
    private javax.swing.JTable laporanCourseTable;
    private javax.swing.JLabel laporanInfoLabel;
    private javax.swing.JLabel laporanNamaLabel;
    private javax.swing.JLabel laporanPointLabel;
    private javax.swing.JLabel laporanRankLabel;
    private javax.swing.JSlider minPoinSlider;
    private javax.swing.JLabel namaCourseRate;
    private javax.swing.JLabel namaUser;
    private javax.swing.JSlider poinDapatSlider;
    private javax.swing.JLabel pointUser;
    private javax.swing.JLabel rankUser;
    private javax.swing.JRadioButton rate1Course;
    private javax.swing.JRadioButton rate2Course;
    private javax.swing.JRadioButton rate3Course;
    private javax.swing.JRadioButton rate4Course;
    private javax.swing.JRadioButton rate5Course;
    private javax.swing.JButton rateButton;
    private javax.swing.ButtonGroup rateButtonGroup;
    private javax.swing.JButton rateCourseButton;
    private javax.swing.JButton rateTeacherButton;
    private javax.swing.JFrame rateWindow;
    private javax.swing.JButton saveToPdfButton;
    private javax.swing.JButton searchCourseButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton tambahCourseButton;
    private javax.swing.JButton terminateButton1;
    private javax.swing.JPasswordField terminatePasswordField1;
    private javax.swing.JPasswordField terminateRetypePasswordField1;
    private javax.swing.JLabel titleRateCourseWindow;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the courseTable
     */
    public javax.swing.JTable getCourseTable() {
        return courseTable;
    }

    void setCourseTable(DefaultTableModel d) {
        this.courseTable.setModel(d);
    }
}
